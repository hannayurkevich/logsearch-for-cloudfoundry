releases:
- (( merge ))
- name: logsearch-for-cloudfoundry
  version: latest

jobs:
- (( merge ))
- name: ingestor
  templates:
  - (( merge ))
  - {name: ingestor_cloudfoundry-firehose, release: logsearch-for-cloudfoundry}
  properties:
    cloudfoundry:
      api_endpoint: https://api.sys.cf.example
      doppler_endpoint: wss://doppler.sys.cf.example
      firehose_user: admin
      firehose_password: admin_password
      skip_ssl_validation: true
    syslog:
      host: ingestor_ip
      port: 5514

- name: parser
  templates:
  - (( merge ))
  - {name: logsearch-for-cloudfoundry-filters, release: logsearch-for-cloudfoundry}
  properties:
    logstash_parser:
      debug: false
      elasticsearch_index: "logs-%{[@metadata][index]}-%{+YYYY.MM.dd}"
      elasticsearch_index_type: "%{@type}"
      filters:
      - logsearch-for-cf: /var/vcap/packages/logsearch-for-cloudfoundry-filters/logstash-filters-default.conf

- name: maintenance
  templates:
  - (( merge ))
  - {name: logsearch-for-cloudfoundry-filters, release: logsearch-for-cloudfoundry}
  properties:
    elasticsearch_config:
      templates:
      - index_template: /var/vcap/packages/logsearch-for-cloudfoundry-filters/logs-template.json

- name: create-uaa-client
  lifecycle: errand
  release: logsearch-for-cloudfoundry
  instances: 1
  templates:
  - {name: create-uaa-client, release: logsearch-for-cloudfoundry}
  networks:
  - name: default
  resource_pool: errand
  properties:
    create-uaa-client:
      oauth2_client_id: kibana_client_id
      oauth2_client_secret: kibana_client_password
      cloudfoundry:
        system_domain: sys.cf.example
        admin_client_secret: admin_client_secret

- name: upload-kibana-dashboards
  lifecycle: errand
  release: logsearch-for-cloudfoundry
  instances: 1
  templates:
  - {name: upload-kibana-dashboards, release: logsearch-for-cloudfoundry}
  networks:
  - name: default
  resource_pool: errand
  properties:
    elasticsearch:
      host: (( grab jobs.elasticsearch_master.networks.default.static_ips.[0] ))
      port: 9200

- name: kibana
  templates:
  - (( merge ))
  - {name: kibana-auth-plugin, release: logsearch-for-cloudfoundry}
  properties:
    kibana:
      env:
      - KIBANA_OAUTH2_CLIENT_ID: kibana_client_id
      - KIBANA_OAUTH2_CLIENT_SECRET: kibana_client_password
      - SKIP_SSL_VALIDATION: true
      - CF_API_URI: https://api.sys.cf.example
      - CF_SYSTEM_ORG: system # Org Managers of this org get admin access
      - REDIS_HOST: my_redis_host # Redis host to use for sessions
      plugins:
      - auth: /var/vcap/packages/kibana-auth-plugin/kibana-auth-plugin.tar.gz
